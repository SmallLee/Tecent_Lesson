1.Cookie
    a：创建Cookie对象
    b:设置Cookie时效(默认情况下是会话级别的Cookie,存储在浏览器的内存中，用户退出浏览器后被删除，若
    希望存储在磁盘上，则需要设置maxAge,单位是秒，最大时效设置为0是命令浏览器删除cookie,负数表示cookie永远不会被存储)
    c：添加到响应头

2.request.getCookies()//从请求中获取Cookie
  cookie.getName//获取cookie名字
  cookie.getValue//获取cookie的值
  cookie.setMaxAge//设置Cookie最大时效
  response.addCookie//添加cookie
  cookie.getMaxAge:获取最大时效

3.Cookie只对一个客户端有效，用其他浏览器访问时，第一次还是没有Cookie

4.删除Cookie
            tempCookie.setMaxAge(0);
           response.addCookie(tempCookie)
5.Cookie的作用范围
    当前目录和当前目录的子目录，但不能作用域当前目录的上一级目录
    可以通过cookie.setPath设置Cookie作用范围
    cookie.setPath("/")其中斜杠代表根目录，意思就是说根目录下的cookie是可见的

6.对Tomcat而言
    request.getScheme  http
    request.getServerName()---localhost
    request.getServerPort()---8080

    request.getContextPath是为了解决相对路径的问题，可返回站点的根路径
    如果当前文件在根路径下，则
    <a href="<%=request.getContextPath()%>/cookie/read.jsp">和
    <a href="cookie/read.jsp">效果一样

7.Session
    session通过sessionId区分不同的客户，session是以cookie或者url重写为基础的，默认使用Cookie实现，
    系统会使用一个JSESSIONID的Cookie,称之为session cookie,以区别persistent cookie
    session cookie是存储在内存中的
8.HttpSession生命周期
    a:什么时候不会新创建session对象？
        (1)当前资源是第一次访问，并且jsp的page指定的session为false
        (2)不是第一个资源，并且其他页面已经创建了session对象，则服务器不会为当前jsp页面创建session对象
        ，而是会把与当前会话关联的那个session对象返回来
    对于Servlet:若servlet是客户端访问的第一个资源，则只有调用了request.getSession或者request.getSession(true)时才创建

   Servlet中如何获取session
    request.getSession()
    b:什么时候销毁session
        调用session的invalidate
        服务器卸载了当前web应用
        超过了session的过期时间,session.setMaxInactiveInterval可以设置session的有效时间
        在web.xml中也可以设置session过期时间，单位分钟

9.在Cookie禁用的情况下，如何跟踪session
    通过URL重写

10.Session简易购物车
    当表单中有多选按钮，如果都不选，提交时，没有请求体信息,checkbox的name属性要相同
    request.setAttribute只在一个request内有效，如果重定向客户端，将取不到值。
    request.getSession().setAttribute可以通过sessionId得到自己的session，将参数
    存储到session中，即使重定向页面，也不会丢失
11.绝对路径和相对路径
    开发建议写绝对路径，写绝对路径肯定没问题，写相对路径可能有问题
    在由Servlet转发到JSP页面时，此时浏览器地址栏上显示的是Servlet的路径，而若JSP页面的超链接
    还是相对于该JSP页面的地址，则可能出现问题
    比如从a.jsp到Servlet,Servlet转发到b.jsp,b和c都在根目录下path文件夹里面，若此时b跳c的链接地址写的是c.jsp，就出问题

    编写绝对路径可以避免上面的问题

    JavaWeb中的/代表什么
        代表当前Web应用的根路径（/需要交给servlet处理）
                a:请求转发
                b：web.xml中配置的
        代表当前站点的跟路径(浏览器处理)
                a:超链接
                b:表单中的action
                c:请求重定向
         如何编写绝对路径：若是相对于当前站点根路径：在再其前面加上contextPath
         通过request或者application的getContextPath获得