Tomcat启动
1.如果想要在命令行中直接输入startup.bat启动服务器，需要配置CATALINA_HOME和JAVA_HOME两个环境变量
执行startup.bat命令以后，会先检查CATALINA_HOME这个环境变量，然后执行这个环境变量下的
catAlina.bat命令，在这个命令中调用了setclasspath.bat命令，在这个命令中会去检查JAVA_HOME是否配置

2.如果重复启动一个tomcat,会报错，想要查看报错信息，用catalina run命令来启动tomcat,可以看到下面的错误提示
java.net.BindException: Address already in use: JVM_Bind

catalina start:在新的窗口启动服务器 catalina stop 关闭新窗口启动的服务器
catalina run：在当前窗口启动服务器，启动以后通过ctrl+C可以关闭服务器

<role rolename="manager-gui"/>
<user username="lxn" password="lxn" roles="manager-gui"/>


手动编写web应用放到tomcat目录下，运行时报错
Only a type can be imported. tencent.Person resolves to a package

3.创建项目找不到Servlet类的解决办法，File-Project Structure,点击+号，选择jars or directies,
选择tomcat目录里lib下的servlet-api.jar

4.创建一个类，实现Servlet类，并实现对应的方法，
配置
 <!--配置和映射Servlet-->
    <servlet>
        //Servlet注册的名字
        <servlet-name>HelloServlet</servlet-name>
        <servlet-class>tencent.HelloServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        //需要和Servlet文本节点的名称一样
        <servlet-name>HelloServlet</servlet-name>
        <url-pattern>/hello</url-pattern>
    </servlet-mapping>

 5.启动服务器访问Servlet时，依次执行下面的方法(4个生命周期相关的方法)
HelloServlet constructor：创建servlet实例时调用
init：创建完对象后立即调用，用于初始化servlet
service
关闭时调用servlet的destory方法
destory:释放servlet占用的资源

6.load-on-startup:制定servlet创建的时机，负数代表第一次请求的时候创建，0或证书代表当前web应用被Servlet容器加载的
时候创建，数值越小优先级越高，也就是越早被创建

一个servlet可以对应多个servlet-mapping
7.url-pattern可以使用通配符*，只能用下面两种方式
    a:*.后缀名
    b:以/开头，以/*结尾，例如/action/*

8.配置任意路径下的web应用
    在tomcat的conf\Catalina\localhost路径下新建一个xml文件，这里取名为helloworld.xml
    内容如下
    <Context path="/test" docBase = "D:\\helloworld" reloadable="true">
    </Context>

    path:Context的上下文路径，一个Servlet对应一个唯一的上下文路径，而这个名称只要唯一就行，至于是什么名称，没有限定。
    docBase指定项目的真实存放路径
    reloadable：如果设置为true，Tomcat服务器在运行时，会监视WEB-INF/classes和WEB-INF/lib目录下类的改变，如果发现有类被更新，
    Tomcat服务器将自动重新加载该Web应用程序。这个特性在应用程序开发阶段非常有用，
    但是它需要额外的运行时开销，所以在产品发布时不建议使用。该属性的默认值是false。
9.ServletConfig
    方法 getInitParameterNames
    getServletName获得注册的Servlet的名字
    getInitParameter
    getServletContext

10.HTTP请求和响应
   请求结构：请求行，请求头，一个空行，试题内容
   响应结构：状态行，消息头，一个空行，响应实体
11.在浏览器地址输入某个url访问或者单击链接访问url，都是get请求，get请求的数据在1k以下
    get请求把表单的字段和数据封装在请求实体中

  客户端请求：
  GET /hello.txt HTTP/1.1
  User-Agent: curl/7.16.3 libcurl/7.16.3 OpenSSL/0.9.7l zlib/1.2.3
  Host: www.example.com
  Accept-Language: en, mi

 服务端响应：
    HTTP/1.1 200 OK
    Date: Mon, 27 Jul 2009 12:28:53 GMT
    Server: Apache
    Last-Modified: Wed, 22 Jul 2009 19:15:56 GMT
    ETag: "34aa387-d-1568eb00"
    Accept-Ranges: bytes
    Content-Length: 51
    Vary: Accept-Encoding
    Content-Type: text/plain
12.ServletRequest
    getParameter:若参数有多个值，只能获得第一个
    getParameterMap
    getParameterNames
    getParameterValues：获取名称对应的数组
  通过子接口HttpServletRequest可以获得与HTTP请求有关的数据